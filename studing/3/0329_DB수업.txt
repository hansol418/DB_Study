--1.ename 에서 처음부터 2글자만 추출하여 소문자로 출력
select ename
from emp;

select ename, substr(ename,1,2) 이름, lower(substr(ename,1,2)) 소문자이름
from emp;

--REPLACE
select '010-1234-5678' as rep_before,
replace('010-1234-5678','-',' ') rep_after
from dual;
--2. ename 에서 S를 s로 변경하여 출력
select ename, replace(ename, 'S','s')       
from emp;

select 'orace', LPAD('orace',10,'#') as LPAD1,
                RPAD('orace',10,'#') as RPAD1,
                LPAD('orace',10) as LPAD2,
                RPAD('orace',10) as RPAD2
from dual;
-- 연결 : concat
select concat(ename, job)
from emp;
select concat(ename,':')
from emp;
--3. concat 사용하여 ename : job 예)SMITH:CLERK
select concat(concat(ename,':'),job)
from emp;

--4. 문자연결
select ename ||':'|| job ename_job
from emp;

--5. 사원번호(empno)를 앞 2자리만 표현하고 뒤 2자리는 *로 출력
select empno, 
substr(empno,1,2), substr(empno,1,2),rpad(substr(empno,1,2),4,'*')
from emp;

select empno,
substr(empno,1,2), replace(empno,substr(empno,-2,2),'**')
from emp;

select rpad(substr(empno,1,2),length(empno),'*') 사원번호
from emp;
--공백제거
select trim('   oracle   ') as str, length(trim('   oracle   ')) 길이,
       Ltrim('   oracle   ') as str, length(trim('   oracle   ')) Ltrim길이,
       Rtrim('   oracle   ') as str, length(trim('   oracle   ')) Rtrim길이
from dual;

--숫자
--round(반올림)
select round(123.567,1), round(123.567,2),
       round(123.567,-1)
from dual;

--Trunc(버림)
select TRUNC(15.79,1), TRUNC(15.79,2), TRUNC(15.79,-1), TRUNC(15.793)
from dual;

--ceil, floor 가장 가까운 큰수, 작은 정수 반환
select ceil(3.14),floor(3.14),ceil(-3.14),floor(-3.14),trunc(-3.14),trunc(3.14)
from dual;

--나머지 
select mod(15,6)
from dual;

--날짜
select sysdate 오늘, sysdate+1 내일, sysdate-1 어제, sysdate+3
from dual;

select sysdate, add_months(sysdate,3)
from dual;


select add_months('22/05/15',3)
from dual;
--사원의 번호, 이름, 입사일, 입사 10년 후 날짜 출력
select empno, ename, hiredate, add_months(hiredate,120) 십년후
from emp;

select empno, ename, hiredate, sysdate,
months_between(hiredate,sysdate) as months1,
months_between(sysdate,hiredate) as months2,
trunc(months_between(sysdate,hiredate)) as 근무개월수
from emp;

select empno, ename, hiredate, sysdate,
trunc(months_between(sysdate,hiredate))||'개월' as 근무개월수
from emp;

select empno, ename, hiredate, sysdate,
concat(trunc(months_between(sysdate,hiredate)),'개월') as 근무개월수
from emp;

select sysdate, next_day(sysdate,'월요일'), last_day(sysdate), last_day('22/05/01')
from dual;
--6 사원번호(empno)가 짝수인 사원의 번호(empno), 이름(ename), 직급(job) 출력
select empno, ename, job
from emp
where mod (empno,2)=0;
--7. 부서번호가 10번인 사원의 근무개월 수 출력(버림)
select ename,trunc(months_between(sysdate,hiredate)) 근무개월수
from emp
where deptno=10;

--급여가(sal) 1500에서 3000 사이의 사원은 그 급여의 15%를 회비로 지불
--이름, 급여, 회비(반올림)를 출력
select ename, sal,round(sal*0.15) 회비 
from emp
where sal>1500 and sal<=3000;

--p157형변환함수
--숫자+문자(500==>숫자)
select empno,ename, empno+'500'
from emp
where ename='SMITH';

--오류발생
--select 'ABCD'+empno, empno
--from emp
--where ename='SMITH';

select to_char(sysdate,'YYYY/MM/DD HH:MI:SS') 현재날짜시간
from dual;

select to_char(sysdate, 'MM') from dual;
select to_char(sysdate, 'DD') from dual;
select to_char(sysdate, 'SS') from dual;
select to_char(sysdate, 'MI') from dual;
select to_char(sysdate, 'MON') from dual;
select to_char(sysdate, 'MONTH') from dual;
select to_char(sysdate, 'day') from dual;
select to_char(sysdate, 'DAY') from dual;
--입사일이 1,2,3월인 사원의 사번(empno), 이름(ename), 입사일(hiredate) 출력
select empno, ename, hiredate
from emp
where to_char(hiredate,'MM')in ('01','02','03');

select empno, ename, hiredate
from emp
where to_char(hiredate,'MM') between '01' and '03';

--
select sal, to_char(sal,'$999,999') sal_$,
            to_char(sal,'L999,999') sal_L,
            to_char(sal,'$000,999') sal_0
from emp;

select to_char(123456, '$999,999,999')
from dual;

select to_number('1,300','999,999')-to_number('1,500','999,999')
from dual;
--80/12/17 일 이후로 입사한 사람 출력
select *
from emp
where hiredate>('80/12/17');

select *
from emp
where hiredate>to_date('80/12/17','YYYY/MM/DD');

--사번, 이름, 급여, 커미션 급여+커미션 출력
select empno, ename, sal, comm, nvl(comm,0),sal+nvl(comm,0)
from emp;
--nv12(값, null 아닐때, null)
select empno, ename, sal, comm, nvl2(comm,'o','X')
from emp;
--연봉 (1년치 급여+comm)
select empno, ename, sal*12+nvl(comm,0) 연봉1,
nvl2(comm,sal*12+comm, sal*12) 연봉2
from emp;

--mgr 이 null이면 'CEO'로 출력, empno, ename, mgr
select empno, ename, nvl(to_char(mgr),'CEO')
from emp;

select empno, ename, nvl(to_char(mgr),'CEO')
from emp
where mgr is null;

--170
-- job에 따라 급여 인상률을 다르게 설정
-- MANAGER 1.5 / SALESMAN 1.2 / ANALST 1.05 / 1.04
-- decode
select empno, ename, job, sal,
       decode(job, 'MANAGER', sal*1.5,
                   'SALESMAN',sal*1.2,
                   'ANALST',sal*1.05,
                   sal*1.04) upsal
from emp;

--case when
select empno, ename, job, sal,
case job
when 'MANAGER' then sal*1.5
when 'SALESMAN' then sal*1.2
when 'ANALST' then sal*1.05
else sal*1.04
end as upsal
from emp;

-- comm이 null이면 해당사항없음, comm=0 이면 수당없음
-- comm이 있으면(50) 수당:50
-- empno, ename, comm, comm_text 출력

select empno, ename, comm,
case 
when comm is null then '해당사항없음'
when comm=0 then '수당없음'
when comm > 0 then '수당:'||comm
end as comm_text
from emp;
    
select empno, ename, comm,to_char(comm),
decode (comm, null, '해당사항없음',
              0, '수당없음',
              '수당:'||comm)
as comm_text
from emp;

--professor 테이블 이용
--professor 테이블에서 교수명과 학과번호, 학과명 출력
--학과번호가 101은 컴퓨터공학과 101이 아닌 학과는 학과명에 
--아무것도 출력하지 마세요
select * from professor;

select name, deptno,
decode(deptno,101,'컴퓨터공학과') as 학과명
from professor;

--2. professor 테이블에서 교수명과 학과번호, 학과명 출력
--학과번호가 101은 컴퓨터공학과 101이 아닌 학과는 기타로 출력
select name, deptno,
case deptno
when 101 then '컴퓨터공학과'
else '기타'
end as 학과명
from professor;
             
select name, deptno,
decode(deptno,101,'컴퓨터공학과','기타') as 학과명
from professor;

--3. 학과번호가 101은 확과명은 컴퓨터공학과로 출력하고
-- 102번은 멀티미디어공학과
-- 201 소프트웨어 공학 나머지 기타
select name, deptno,
case deptno
when 101 then '컴퓨터공학과'
when 102 then '멀티미디어공학과'
when 201 then '소프트웨어공학과'
else '기타'
end as 학과명
from professor;

select name, deptno,
decode(deptno,101,'컴퓨터공학과',
              102,'멀티미디어공학과',
              210,'소프트웨어공학과',
              '기타') as 학과명
from professor;

--p174
--연습문제1
--Q1
select empno, rpad(substr(empno,1,2),length(empno),'*') MASKING_EMPNO,
       ename, rpad(substr(ename,1,1),length(ename),'*') MASKING_name
from emp
where length(ename) >=5 and length(ename) <6; 

--연습문제2
--Q2
select empno, ename, sal,
trunc(sal/21.5,2) as DAY_PAY,
round (trunc(sal/21.5,2)/8,1) as TIME_PAY
from emp;

--연습문제3
--Q3
select empno, ename, hiredate, 
to_char(next_day(add_months(hiredate,3),'월요일'), 'YYYY-MM--DD') as R_JOB,
nvl(to_char(comm),'N/A') as COMM
from emp;

--연습문제4
--Q4
select empno, ename, mgr,
case 
when mgr is null then '0000'
when substr(mgr,1,2) = '75' then '5555'
when substr(mgr,1,2) = '76' then '6666'
when substr(mgr,1,2) = '77' then '7777'
when substr(mgr,1,2) = '78' then '8888'
else to_char(mgr)
end as CHG_MGR
from emp;

select empno, ename, mgr,
decode (substr(mgr,1,2), null, '0000',
       '75', '5555',
       '76', '6666',
       '77', '7777',
       '78', '8888',
       to_char(mgr)) as CHG_MGR
from emp; 

select sal from emp;
select sum(sal) from emp;
select distinct(sal) from emp;
select sum(distinct(sal))from emp;
select sum(sal) 합계, sum(distinct(sal)) 합계2
from emp;
--급여합계와 comm 합계
select sum(sal), sum(comm)
from emp;

select sal from emp;
select count(sal) from emp;
select count(distinct(ename)) from emp;
select count(ename) from emp;
select count(*) from emp;

--부서번호가 30인 사원 수
select count(empno)
from emp
where deptno=30;

--comm이 null이 아닌 개수
select count(comm), count(*)
from emp
where comm is not null;

select count(sal), count(distinct(sal)), count(all sal)
from emp;

--최대값
select max(sal)
from emp;

--최소값
select min(sal)
from emp;

select max(sal), min(sal)
from emp;

--평균
select avg(sal) from emp;
--평균을 반올림해서 구하기 (소수첫번째까지 출력)
select round(avg(sal),1)
from emp;

--부서번호가 20인 사원의 입사일 중 가장 최근에 입사일 출력
select max(hiredate)
from emp
where deptno=20;
--professor 테이블
-- 1. 총 교수 수 출력 
select count(*)
from professor;




-- 2. 교수들 급여 합계
select sum(sal)
from professor;



-- 3. 급여 평균
select avg(sal)
from professor;

-- 4. 급여 평균을 구하는 소수점 첫째자리에서 반올림
select round(avg(sal),-1)
from professor;

-- 5. 교수중에서 최고 급여
select max(sal)
from professor;


-- 6. 교수중에서 최소 급여
select min(sal)
from professor;



-- 7. 교수중에서 최고 급여를 받는 사람의 이름과 급여 출력
select name, sal
from professor
where sal = (select max(sal) from professor);

